/*
 * FarmStall API
 *  An API for writing reviews about your favourite ( or worst ) farm stalls.  ![Picture of produce](https://farmstall.ponelat.com/img/produce-banner.jpg)  ---  # Auth  To create **Reviews** without being _anonymous_. You need to add a **MyUserToken** to the `Authorization` header.  To get a **MyUserToken**: 1. Create a **User** with [POST /users](#Users/post_users) 1. Get a **MyUserToken** by calling [POST /tokens](#Users/post_tokens) with your **User** credentials.  # Reviews Reviews are the heart of this API. <br/> Registered **Users** and anonymous users can both write reviews based on their experience at farm stalls. <br/>  Each review comes with a rating of between one and five stars inclusive.  - One star being the worst experience - Five stars being the best   ### Example Reviews    \"A wonderful time!\" &mdash; Bob McNally    <br/>   ![5 stars](https://farmstall.ponelat.com/img/rating-5.png)    \"An awful place\" &mdash; _Anonymous_    <br/>   ![1 star](https://farmstall.ponelat.com/img/rating-1.png)    \"A totally average place.\" &mdash; Jane Fair    <br/>   ![3 stars](https://farmstall.ponelat.com/img/rating-3.png)
 *
 * OpenAPI spec version: ch08-end
 * Contact: jponelat@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.42
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {InlineResponse2011} from '../model/InlineResponse2011';
import {InlineResponse2012} from '../model/InlineResponse2012';
import {TokensBody} from '../model/TokensBody';
import {UsersBody} from '../model/UsersBody';

/**
* Users service.
* @module api/UsersApi
* @version ch08-end
*/
export class UsersApi {

    /**
    * Constructs a new UsersApi. 
    * @alias module:api/UsersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the tokensPost operation.
     * @callback moduleapi/UsersApi~tokensPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2012{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new token
     * @param {Object} opts Optional parameters
     * @param {module:model/TokensBody} opts.body 
     * @param {module:api/UsersApi~tokensPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    tokensPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse2012;

      return this.apiClient.callApi(
        '/tokens', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the usersPost operation.
     * @callback moduleapi/UsersApi~usersPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2011{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new user
     * @param {Object} opts Optional parameters
     * @param {module:model/UsersBody} opts.body User details
     * @param {module:api/UsersApi~usersPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    usersPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse2011;

      return this.apiClient.callApi(
        '/users', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}